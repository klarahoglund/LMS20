@model ParticipantsViewModel
@inject UserManager<ApplicationUser> UserManager


@{
    ViewData["Title"] = "Details";
}


<h1 @*id = "participantsTitle"*@ class = "@*my-5*@ title title-main">Kursmedlemmar</h1>
<hr />


@if(User.IsInRole("Teacher"))
{
    <button 
    type = "button" 
    class = "float-end btn btn-outline-dark" 
    data-bs-toggle = "modal" 
    data-bs-target = "#addstudent"><i class="bi bi-person-plus-fill"></i>
    </button>
}

<table class="table my-5">
        <thead>
            <tr>
                <th>

                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ApplicationUsers.FirstOrDefault()!.FirstName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ApplicationUsers.FirstOrDefault()!.LastName)
                </th>
                 <th>
                    @Html.DisplayNameFor(model => model.ApplicationUsers.FirstOrDefault()!.Email)
                </th>
                <th></th>
            </tr>
        </thead>

        <tbody>
            @foreach (var item in Model.ApplicationUsers) {
            <tr>
              <td>
                  <i class = "bi bi-person-fill"></i>
              </td>

              <td>
                  @Html.DisplayFor(modelItem => item.FirstName)
              </td>
              <td>
                  @Html.DisplayFor(modelItem => item.LastName)
              </td>
              <td>
                  @Html.DisplayFor(modelItem => item.Email)
              </td>
              <td>
                  @if (User.IsInRole("Teacher"))
                  { 
                      <a asp-action = "EditUser" asp-route-id = "@item.Id" class="btn btn-outline-dark float-end"><i title = "Redigera elev" class="bi bi-pencil-square"></i></a>
                  }
              </td>
            </tr>
            }
        </tbody>
</table>

<div class = "modal fade" id = "addstudent" tabindex = "-1" role = "dialog" aria-labelledby = "exampleModalLabel" aria-hidden = "true">
    <partial name = "AddStudentPartial" model = "new RegistrationViewModel{CourseId = @Model.Id}" />
</div>

@section Scripts
{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}



